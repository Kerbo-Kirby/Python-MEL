
global proc float  Add(float $numbers[])
{
    float $num = 0;
    
    for ( $i = 0; $i<size ($numbers); $i++)
{
        $num += $numbers[$i];
}
    return $num;
    
}


global proc float subtract  (float $numbers[])

{
    float $diff = $numbers[0];
    
    for ( $i = 1; $i<size ($numbers); $i++)
{
        $diff -= $numbers[$i];
}
    return $diff;
    
}


global proc float  multi (float $numbers[])

{
    float $mul = 1;
    
    for ( $i = 0; $i<size ($numbers); $i++)
{
        $mul *= $numbers[$i];
}
    return $mul;
    
}



global proc float  divide (float $numbers[])

{
    float $Div = $numbers[0];
    
    for ( $i = 1; $i<size ($numbers); $i++)
{
        $Div /= $numbers[$i];
}
    return $Div;
    
}

global proc float mean (float $numbers[])
{
    float $me = 0;
    float $mo = 0;
    float $val = 0;
    
    for ( $i = 0; $i < size ($numbers); $i++)
{
        $mo =  `size $numbers`;
        
        $me += $numbers[$i];
        
        $val = $me;
        
        $val /= $mo;
      
      
}
    return $val;    
}

  
  
global proc float mode(float $numbers[])
{
    float $bum = 0;
    float $val = 0;
    
    
      
          
    
    for ( $i = 0; $i<size ($numbers); $i++)
{
      for($j = $i +1 ; $j < size ($numbers); $j++)
      
      {
       $numbers = `sort $numbers`;
       
    $val = $numbers[$i];
     
     
           if($numbers[$i] == $numbers[$j])
      {
           
          
          
      }
      }
        
}
    return $val;
    
}

mode({4,4,4,2,2,2,7,7,7,7,7});

global proc float  power (float $numbers[])
{
    ;
    
    float $mul = $numbers[0];
    
    for ( $i = 0; $i<size ($numbers); $i++)
{
  
        $mul *= $numbers[$i];
        
}
    return $mul;
    
}



global proc float median (float $numbers[])
{
   float $value = 0;
   float $vali = 0;
   
   float $something;
   float $mid = 0;
   
   float $medain;
   for ( $i = 0; $i < size ($numbers); $i++)
{
   
          // $sortt = `sort $numbers`;
           
           $value =`size $numbers`;
           
        $medain = $numbers[$i];
       
           //
           
          
          
           if ($value % 2 != 0)
          { 
          
          $something = $value /= 2;
          
          $medain /= $something;
          $mid = $medain;
          
    // $mid = $numbers[$i];
     
        
        
           
          // print "  whjah  ";
           
           
       }
             
           
}

    return $mid;
    
}

  median ({1,4,5});
  

global proc float calc (string $call, float $operation[])
{
   
    
   
    if($call == "add")
    {
 
       
     return Add($operation);
     
    }
    
  if($call == "subtract")
  
    {
        
        return subtract($operation);
        
    }
    if($call == "multiply")
   
    {
        
        return multi($operation);
        
    }
    
    if($call == "divide")
   
    {
        
        return divide($operation);
        
    }
    
    if($call == "mean")
   
    {
        
        return mean($operation);
        
    }
    
     if($call == "power")
   
    {
        
        return power($operation);
        
    }
    
}



calc("power", {4});